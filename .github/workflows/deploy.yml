name: deploy

on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  msvc-windows-binary:

    runs-on: windows-latest

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - uses: actions/checkout@v3

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-pc-windows-msvc
        override: true

    - uses: Swatinem/rust-cache@v2

    - name: Build
      run: |
        cargo build --release

    - name: Get the version
      shell: bash
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create zip
      run: |
        $ZIP_PREFIX = "mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}"
        7z a "$ZIP_PREFIX-x86_64-pc-windows-msvc.zip" `
             "./target/release/mdbook_katex_css_download.exe"

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        path: mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-pc-windows-msvc.zip

  gnu-linux-binary:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install x86_64-unknown-linux-gnu target
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true

    - uses: Swatinem/rust-cache@v2

    - name: Build mbdook-katex
      run: |
        cargo build --release

    - name: Get the version
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create tar
      run: |
        mv target/release/mdbook_katex_css_download mdbook_katex_css_download
        TAR_FILE=mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}
        tar -czvf $TAR_FILE-x86_64-unknown-linux-gnu.tar.gz \
                  mdbook_katex_css_download

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        path: |
          Cargo.lock
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-unknown-linux-gnu.tar.gz

  musl-linux-binary:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install x86_64-unknown-linux-musl
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-musl
        override: true

    - uses: Swatinem/rust-cache@v2

    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: |
          --release
          --features native-tls-vendored
          --target x86_64-unknown-linux-musl

    - name: Get the version
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create tar
      run: |
        mv target/x86_64-unknown-linux-musl/release/mdbook_katex_css_download mdbook_katex_css_download
        TAR_FILE=mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}
        tar -czvf $TAR_FILE-x86_64-unknown-linux-musl.tar.gz \
                  mdbook_katex_css_download

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        path: |
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-unknown-linux-musl.tar.gz

  x86_64-macos-binary:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install stable-x86_64-apple-darwin
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-apple-darwin
        override: true

    - uses: Swatinem/rust-cache@v2

    - name: Build x86_64-apple-darwin
      run: |
        cargo build --release

    - name: Get the version
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create tar for x86_64-apple-darwin
      run: |
        mv target/release/mdbook_katex_css_download mdbook_katex_css_download
        TAR_PREFIX=mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}
        tar -czvf $TAR_PREFIX-x86_64-apple-darwin.tar.gz \
                  mdbook_katex_css_download

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        path: |
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-apple-darwin.tar.gz
  aarch64-macos-binary:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install stable-aarch64-apple-darwin
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: aarch64-apple-darwin
        override: true

    - uses: Swatinem/rust-cache@v2

    - name: Cross build for aarch64-apple-darwin
      run: |
        cargo build --release --target=aarch64-apple-darwin

    - name: Get the version
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create tar for aarch64-apple-darwin
      run: |
        mv target/aarch64-apple-darwin/release/mdbook_katex_css_download mdbook_katex_css_download
        TAR_PREFIX=mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}
        tar -czvf $TAR_PREFIX-aarch64-apple-darwin.tar.gz \
                  mdbook_katex_css_download

    - name: Upload binary artifact
      uses: actions/upload-artifact@v2
      with:
        path: |
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-aarch64-apple-darwin.tar.gz

  deploy:

    needs: [msvc-windows-binary, gnu-linux-binary, musl-linux-binary, x86_64-macos-binary, aarch64-macos-binary]

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifact

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Get the version
      id: tagName
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"

    - name: Create a release
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ steps.tagName.outputs.version }}
        files: |
          Cargo.lock
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-aarch64-apple-darwin.tar.gz
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-apple-darwin.tar.gz
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-pc-windows-msvc.zip
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-unknown-linux-gnu.tar.gz
          mdbook_katex_css_download-v${{ steps.tagName.outputs.version }}-x86_64-unknown-linux-musl.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
